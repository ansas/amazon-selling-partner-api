<?php

/**
 * This file is auto-generated by Saloon SDK Generator
 * Generator: Crescat\SaloonSdkGenerator\Generators\DtoGenerator
 * Do not modify it directly.
 */

declare(strict_types=1);

namespace SellingPartnerApi\Seller\AmazonWarehousingAndDistributionV20240509\Dto;

use SellingPartnerApi\Dto;
use SellingPartnerApi\Seller\AmazonWarehousingAndDistributionV20240509\Responses\InboundShipment;

final class InboundOrder extends Dto
{
    protected static array $complexArrayTypes = [
        'channelPlacedInboundShipments' => InboundShipment::class,
        'packagesToInbound' => DistributionPackageQuantity::class,
    ];

    /**
     * @param  InboundShipment[]  $channelPlacedInboundShipments  List of inbound shipments part of this order.
     * @param  \DateTimeInterface  $createdAt  Date when this order was created.
     * @param  string  $orderId  Inbound order ID.
     * @param  string  $orderStatus  The supported statuses for an inbound order.
     * @param  string  $orderVersion  Inbound order version.
     * @param  Address  $originAddress  Shipping address that represents the origin or destination location.
     * @param  DistributionPackageQuantity[]  $packagesToInbound  List of packages to be inbounded.
     * @param  ?string  $externalReferenceId  Reference ID that can be used to correlate the order with partner resources.
     * @param  ?InboundPreferences  $preferences  Preferences that can be passed in context of an inbound order
     * @param  ?\DateTimeInterface  $shipBy  Date by which this order will be shipped.
     * @param  ?\DateTimeInterface  $updatedAt  Date when this order was last updated.
     */
    public function __construct(
        public array $channelPlacedInboundShipments,
        public \DateTimeInterface $createdAt,
        public string $orderId,
        public string $orderStatus,
        public string $orderVersion,
        public Address $originAddress,
        public array $packagesToInbound,
        public ?string $externalReferenceId = null,
        public ?InboundPreferences $preferences = null,
        public ?\DateTimeInterface $shipBy = null,
        public ?\DateTimeInterface $updatedAt = null,
    ) {}
}
